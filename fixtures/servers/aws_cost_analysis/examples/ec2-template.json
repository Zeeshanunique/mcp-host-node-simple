{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for EC2 Web Application Stack",
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebAppVPC"
          }
        ]
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet"
          }
        ]
      }
    },
    "PrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebApp Internet Gateway"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for web server",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "WebServerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
        ]
      }
    },
    "WebServerInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "WebServerRole"
          }
        ]
      }
    },
    "WebServer1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3.small",
        "SecurityGroupIds": [
          {
            "Ref": "WebServerSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "ImageId": "ami-0c55b159cbfafe1f0",
        "IamInstanceProfile": {
          "Ref": "WebServerInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Web Server 1"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\necho 'Hello World' > index.html\nnohup python -m SimpleHTTPServer 80 &"
        }
      }
    },
    "WebServer2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3.small",
        "SecurityGroupIds": [
          {
            "Ref": "WebServerSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "ImageId": "ami-0c55b159cbfafe1f0",
        "IamInstanceProfile": {
          "Ref": "WebServerInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Web Server 2"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\necho 'Hello World' > index.html\nnohup python -m SimpleHTTPServer 80 &"
        }
      }
    },
    "AppServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Ref": "WebServerSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PrivateSubnet"
        },
        "ImageId": "ami-0c55b159cbfafe1f0",
        "IamInstanceProfile": {
          "Ref": "WebServerInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Application Server"
          }
        ]
      }
    },
    "DatabaseServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "m5.large",
        "SecurityGroupIds": [
          {
            "Ref": "WebServerSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "PrivateSubnet"
        },
        "ImageId": "ami-0c55b159cbfafe1f0",
        "IamInstanceProfile": {
          "Ref": "WebServerInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Database Server"
          }
        ]
      }
    },
    "WebServerDataVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Size": "50",
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WebServer1",
            "AvailabilityZone"
          ]
        },
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Web Server Data"
          }
        ]
      }
    },
    "DatabaseDataVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Size": "200",
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "DatabaseServer",
            "AvailabilityZone"
          ]
        },
        "VolumeType": "io1",
        "Iops": "1000",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Database Data"
          }
        ]
      }
    },
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "PublicSubnet"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "WebServerSecurityGroup"
          }
        ],
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "80",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        },
        "Instances": [
          {
            "Ref": "WebServer1"
          },
          {
            "Ref": "WebServer2"
          }
        ]
      }
    }
  },
  "Outputs": {
    "LoadBalancerDNSName": {
      "Description": "The DNS name of the load balancer",
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "DNSName"
        ]
      }
    }
  }
} 